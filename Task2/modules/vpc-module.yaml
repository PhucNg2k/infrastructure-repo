AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC Module - Creates VPC with public and private subnets'

Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.0.0.0/16
    Public:
      CIDR: 10.0.0.0/24
    Private:
      CIDR: 10.0.1.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [SubnetConfig, VPC, CIDR]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: my-vpc

  DefaultSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Default security group for VPC
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !FindInMap [SubnetConfig, VPC, CIDR]
      Tags:
        - Key: Name
          Value: default-secgroup

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [SubnetConfig, Public, CIDR]
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: public-subnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [SubnetConfig, Private, CIDR]
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: private-subnet

Outputs:
  VpcId:
    Description: ID of the VPC
    Value: !Ref VPC
  PublicSubnetId:
    Description: ID of the Public Subnet
    Value: !Ref PublicSubnet
  PrivateSubnetId:
    Description: ID of the Private Subnet
    Value: !Ref PrivateSubnet
  DefaultSecurityGroupId:
    Description: ID of the default security group
    Value: !Ref DefaultSecurityGroup